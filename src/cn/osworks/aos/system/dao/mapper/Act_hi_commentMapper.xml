<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ACT_HI_COMMENT[act_hi_comment]SQLMapper自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2018-12-18 15:50:45 -->
<mapper namespace="cn.osworks.aos.system.dao.mapper.Act_hi_commentMapper">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert"  parameterType="Act_hi_commentPO">
		INSERT INTO act_hi_comment (
		<if test="type_ != null and type_ != ''">
	         type_, <!-- TYPE_ -->
		</if>
		<if test="time_ != null and time_ != ''">
	         time_, <!-- TIME_ -->
		</if>
		<if test="user_id_ != null and user_id_ != ''">
	         user_id_, <!-- USER_ID_ -->
		</if>
		<if test="task_id_ != null and task_id_ != ''">
	         task_id_, <!-- TASK_ID_ -->
		</if>
		<if test="proc_inst_id_ != null and proc_inst_id_ != ''">
	         proc_inst_id_, <!-- PROC_INST_ID_ -->
		</if>
		<if test="action_ != null and action_ != ''">
	         action_, <!-- ACTION_ -->
		</if>
		<if test="message_ != null and message_ != ''">
	         message_, <!-- MESSAGE_ -->
		</if>
		<if test="full_msg_ != null and full_msg_ != ''">
	         full_msg_, <!-- FULL_MSG_ -->
		</if>
		<if test="id_ != null and id_ != ''">
	          id_  <!-- ID_ -->
	   </if>
		)VALUES(
		<if test="type_ != null and type_ != ''">
	          #{type_, jdbcType=VARCHAR}, <!-- TYPE_ -->
	    </if>
		<if test="time_ != null and time_ != ''">
	          #{time_, jdbcType=VARCHAR}, <!-- TIME_ -->
	    </if>
		<if test="user_id_ != null and user_id_ != ''">
	          #{user_id_, jdbcType=VARCHAR}, <!-- USER_ID_ -->
	    </if>
		<if test="task_id_ != null and task_id_ != ''">
	          #{task_id_, jdbcType=VARCHAR}, <!-- TASK_ID_ -->
	    </if>
		<if test="proc_inst_id_ != null and proc_inst_id_ != ''">
	          #{proc_inst_id_, jdbcType=VARCHAR}, <!-- PROC_INST_ID_ -->
	    </if>
		<if test="action_ != null and action_ != ''">
	          #{action_, jdbcType=VARCHAR}, <!-- ACTION_ -->
	    </if>
		<if test="message_ != null and message_ != ''">
	          #{message_, jdbcType=VARCHAR}, <!-- MESSAGE_ -->
	    </if>
		<if test="full_msg_ != null and full_msg_ != ''">
	          #{full_msg_, jdbcType=VARCHAR}, <!-- FULL_MSG_ -->
	    </if>
		<if test="id_ != null and id_ != ''">
		     #{id_, jdbcType=VARCHAR}  <!-- ID_ -->
	    </if>
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll"  parameterType="Act_hi_commentPO">
		INSERT INTO act_hi_comment (
		    <include refid="column" />
		)
		VALUES (
		    #{id_, jdbcType=VARCHAR},  <!-- ID_ -->
		    #{type_, jdbcType=VARCHAR},  <!-- TYPE_ -->
		    #{time_, jdbcType=VARCHAR},  <!-- TIME_ -->
		    #{user_id_, jdbcType=VARCHAR},  <!-- USER_ID_ -->
		    #{task_id_, jdbcType=VARCHAR},  <!-- TASK_ID_ -->
		    #{proc_inst_id_, jdbcType=VARCHAR},  <!-- PROC_INST_ID_ -->
		    #{action_, jdbcType=VARCHAR},  <!-- ACTION_ -->
		    #{message_, jdbcType=VARCHAR},  <!-- MESSAGE_ -->
		    #{full_msg_, jdbcType=VARCHAR}  <!-- FULL_MSG_ -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="Act_hi_commentPO">
		UPDATE act_hi_comment
		<set>
			<if test="id_ != null">
		          id_ = #{id_, jdbcType=VARCHAR},  <!-- ID_ -->
			</if>
			<if test="type_ != null">
		          type_ = #{type_, jdbcType=VARCHAR},  <!-- TYPE_ -->
			</if>
			<if test="time_ != null">
		          time_ = #{time_, jdbcType=VARCHAR},  <!-- TIME_ -->
			</if>
			<if test="user_id_ != null">
		          user_id_ = #{user_id_, jdbcType=VARCHAR},  <!-- USER_ID_ -->
			</if>
			<if test="task_id_ != null">
		          task_id_ = #{task_id_, jdbcType=VARCHAR},  <!-- TASK_ID_ -->
			</if>
			<if test="proc_inst_id_ != null">
		          proc_inst_id_ = #{proc_inst_id_, jdbcType=VARCHAR},  <!-- PROC_INST_ID_ -->
			</if>
			<if test="action_ != null">
		          action_ = #{action_, jdbcType=VARCHAR},  <!-- ACTION_ -->
			</if>
			<if test="message_ != null">
		          message_ = #{message_, jdbcType=VARCHAR},  <!-- MESSAGE_ -->
			</if>
			<if test="full_msg_ != null">
		          full_msg_ = #{full_msg_, jdbcType=VARCHAR},  <!-- FULL_MSG_ -->
			</if>
		</set>
		WHERE  id_ = #{id_}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM act_hi_comment WHERE  id_ = #{id_}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="Act_hi_commentPO">
		SELECT
		<include refid="column" />
		FROM act_hi_comment WHERE  id_ = #{id_}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="Act_hi_commentPO">
		SELECT
		    <include refid="column" />
		FROM act_hi_comment
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="Act_hi_commentPO">
		SELECT
			<include refid="column" />	
		FROM act_hi_comment
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="Act_hi_commentPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM act_hi_comment
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="Act_hi_commentPO">
		SELECT
			<include refid="column" />	
		FROM act_hi_comment
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="Act_hi_commentPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM act_hi_comment
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM act_hi_comment
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM act_hi_comment
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  id_,  <!-- ID_ -->
		  type_,  <!-- TYPE_ -->
		  time_,  <!-- TIME_ -->
		  user_id_,  <!-- USER_ID_ -->
		  task_id_,  <!-- TASK_ID_ -->
		  proc_inst_id_,  <!-- PROC_INST_ID_ -->
		  action_,  <!-- ACTION_ -->
		  message_,  <!-- MESSAGE_ -->
		  full_msg_  <!-- FULL_MSG_ -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  act_hi_comment.id_,  <!-- ID_ -->
		  act_hi_comment.type_,  <!-- TYPE_ -->
		  act_hi_comment.time_,  <!-- TIME_ -->
		  act_hi_comment.user_id_,  <!-- USER_ID_ -->
		  act_hi_comment.task_id_,  <!-- TASK_ID_ -->
		  act_hi_comment.proc_inst_id_,  <!-- PROC_INST_ID_ -->
		  act_hi_comment.action_,  <!-- ACTION_ -->
		  act_hi_comment.message_,  <!-- MESSAGE_ -->
		  act_hi_comment.full_msg_  <!-- FULL_MSG_ -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	    <if test="id_ != null and id_ != ''">
		      AND id_ = #{id_}  <!-- ID_ -->
		</if>
	    <if test="type_ != null and type_ != ''">
		      AND type_ = #{type_}  <!-- TYPE_ -->
		</if>
	    <if test="time_ != null and time_ != ''">
		      AND time_ = #{time_}  <!-- TIME_ -->
		</if>
	    <if test="user_id_ != null and user_id_ != ''">
		      AND user_id_ = #{user_id_}  <!-- USER_ID_ -->
		</if>
	    <if test="task_id_ != null and task_id_ != ''">
		      AND task_id_ = #{task_id_}  <!-- TASK_ID_ -->
		</if>
	    <if test="proc_inst_id_ != null and proc_inst_id_ != ''">
		      AND proc_inst_id_ = #{proc_inst_id_}  <!-- PROC_INST_ID_ -->
		</if>
	    <if test="action_ != null and action_ != ''">
		      AND action_ = #{action_}  <!-- ACTION_ -->
		</if>
	    <if test="message_ != null and message_ != ''">
		      AND message_ = #{message_}  <!-- MESSAGE_ -->
		</if>
	    <if test="full_msg_ != null and full_msg_ != ''">
		      AND full_msg_ = #{full_msg_}  <!-- FULL_MSG_ -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="id_ != null and id_ != ''">
		      AND id_ like '%${id_}%'  <!-- ID_ -->
		</if>
	    <if test="type_ != null and type_ != ''">
		      AND type_ like '%${type_}%'  <!-- TYPE_ -->
		</if>
	    <if test="time_ != null and time_ != ''">
		      AND time_ like '%${time_}%'  <!-- TIME_ -->
		</if>
	    <if test="user_id_ != null and user_id_ != ''">
		      AND user_id_ like '%${user_id_}%'  <!-- USER_ID_ -->
		</if>
	    <if test="task_id_ != null and task_id_ != ''">
		      AND task_id_ like '%${task_id_}%'  <!-- TASK_ID_ -->
		</if>
	    <if test="proc_inst_id_ != null and proc_inst_id_ != ''">
		      AND proc_inst_id_ like '%${proc_inst_id_}%'  <!-- PROC_INST_ID_ -->
		</if>
	    <if test="action_ != null and action_ != ''">
		      AND action_ like '%${action_}%'  <!-- ACTION_ -->
		</if>
	    <if test="message_ != null and message_ != ''">
		      AND message_ like '%${message_}%'  <!-- MESSAGE_ -->
		</if>
	    <if test="full_msg_ != null and full_msg_ != ''">
		      AND full_msg_ like '%${full_msg_}%'  <!-- FULL_MSG_ -->
		</if>
	</sql>
	
</mapper>