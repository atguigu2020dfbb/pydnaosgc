<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ACT_RU_JOB[act_ru_job]SQLMapper自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2018-12-18 15:50:46 -->
<mapper namespace="cn.osworks.aos.system.dao.mapper.Act_ru_jobMapper">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert"  parameterType="Act_ru_jobPO">
		INSERT INTO act_ru_job (
		<if test="rev_ != null">
	         rev_, <!-- REV_ -->
		</if>
		<if test="type_ != null and type_ != ''">
	         type_, <!-- TYPE_ -->
		</if>
		<if test="lock_exp_time_ != null and lock_exp_time_ != ''">
	         lock_exp_time_, <!-- LOCK_EXP_TIME_ -->
		</if>
		<if test="lock_owner_ != null and lock_owner_ != ''">
	         lock_owner_, <!-- LOCK_OWNER_ -->
		</if>
		<if test="exclusive_ != null and exclusive_ != ''">
	         exclusive_, <!-- EXCLUSIVE_ -->
		</if>
		<if test="execution_id_ != null and execution_id_ != ''">
	         execution_id_, <!-- EXECUTION_ID_ -->
		</if>
		<if test="process_instance_id_ != null and process_instance_id_ != ''">
	         process_instance_id_, <!-- PROCESS_INSTANCE_ID_ -->
		</if>
		<if test="proc_def_id_ != null and proc_def_id_ != ''">
	         proc_def_id_, <!-- PROC_DEF_ID_ -->
		</if>
		<if test="retries_ != null">
	         retries_, <!-- RETRIES_ -->
		</if>
		<if test="exception_stack_id_ != null and exception_stack_id_ != ''">
	         exception_stack_id_, <!-- EXCEPTION_STACK_ID_ -->
		</if>
		<if test="exception_msg_ != null and exception_msg_ != ''">
	         exception_msg_, <!-- EXCEPTION_MSG_ -->
		</if>
		<if test="duedate_ != null and duedate_ != ''">
	         duedate_, <!-- DUEDATE_ -->
		</if>
		<if test="repeat_ != null and repeat_ != ''">
	         repeat_, <!-- REPEAT_ -->
		</if>
		<if test="handler_type_ != null and handler_type_ != ''">
	         handler_type_, <!-- HANDLER_TYPE_ -->
		</if>
		<if test="handler_cfg_ != null and handler_cfg_ != ''">
	         handler_cfg_, <!-- HANDLER_CFG_ -->
		</if>
		<if test="tenant_id_ != null and tenant_id_ != ''">
	         tenant_id_, <!-- TENANT_ID_ -->
		</if>
		<if test="id_ != null and id_ != ''">
	          id_  <!-- ID_ -->
	   </if>
		)VALUES(
		<if test="rev_ != null">
	          #{rev_, jdbcType=INTEGER}, <!-- REV_ -->
	    </if>
		<if test="type_ != null and type_ != ''">
	          #{type_, jdbcType=VARCHAR}, <!-- TYPE_ -->
	    </if>
		<if test="lock_exp_time_ != null and lock_exp_time_ != ''">
	          #{lock_exp_time_, jdbcType=VARCHAR}, <!-- LOCK_EXP_TIME_ -->
	    </if>
		<if test="lock_owner_ != null and lock_owner_ != ''">
	          #{lock_owner_, jdbcType=VARCHAR}, <!-- LOCK_OWNER_ -->
	    </if>
		<if test="exclusive_ != null and exclusive_ != ''">
	          #{exclusive_, jdbcType=VARCHAR}, <!-- EXCLUSIVE_ -->
	    </if>
		<if test="execution_id_ != null and execution_id_ != ''">
	          #{execution_id_, jdbcType=VARCHAR}, <!-- EXECUTION_ID_ -->
	    </if>
		<if test="process_instance_id_ != null and process_instance_id_ != ''">
	          #{process_instance_id_, jdbcType=VARCHAR}, <!-- PROCESS_INSTANCE_ID_ -->
	    </if>
		<if test="proc_def_id_ != null and proc_def_id_ != ''">
	          #{proc_def_id_, jdbcType=VARCHAR}, <!-- PROC_DEF_ID_ -->
	    </if>
		<if test="retries_ != null">
	          #{retries_, jdbcType=INTEGER}, <!-- RETRIES_ -->
	    </if>
		<if test="exception_stack_id_ != null and exception_stack_id_ != ''">
	          #{exception_stack_id_, jdbcType=VARCHAR}, <!-- EXCEPTION_STACK_ID_ -->
	    </if>
		<if test="exception_msg_ != null and exception_msg_ != ''">
	          #{exception_msg_, jdbcType=VARCHAR}, <!-- EXCEPTION_MSG_ -->
	    </if>
		<if test="duedate_ != null and duedate_ != ''">
	          #{duedate_, jdbcType=VARCHAR}, <!-- DUEDATE_ -->
	    </if>
		<if test="repeat_ != null and repeat_ != ''">
	          #{repeat_, jdbcType=VARCHAR}, <!-- REPEAT_ -->
	    </if>
		<if test="handler_type_ != null and handler_type_ != ''">
	          #{handler_type_, jdbcType=VARCHAR}, <!-- HANDLER_TYPE_ -->
	    </if>
		<if test="handler_cfg_ != null and handler_cfg_ != ''">
	          #{handler_cfg_, jdbcType=VARCHAR}, <!-- HANDLER_CFG_ -->
	    </if>
		<if test="tenant_id_ != null and tenant_id_ != ''">
	          #{tenant_id_, jdbcType=VARCHAR}, <!-- TENANT_ID_ -->
	    </if>
		<if test="id_ != null and id_ != ''">
		     #{id_, jdbcType=VARCHAR}  <!-- ID_ -->
	    </if>
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll"  parameterType="Act_ru_jobPO">
		INSERT INTO act_ru_job (
		    <include refid="column" />
		)
		VALUES (
		    #{id_, jdbcType=VARCHAR},  <!-- ID_ -->
		    #{rev_, jdbcType=INTEGER},  <!-- REV_ -->
		    #{type_, jdbcType=VARCHAR},  <!-- TYPE_ -->
		    #{lock_exp_time_, jdbcType=VARCHAR},  <!-- LOCK_EXP_TIME_ -->
		    #{lock_owner_, jdbcType=VARCHAR},  <!-- LOCK_OWNER_ -->
		    #{exclusive_, jdbcType=VARCHAR},  <!-- EXCLUSIVE_ -->
		    #{execution_id_, jdbcType=VARCHAR},  <!-- EXECUTION_ID_ -->
		    #{process_instance_id_, jdbcType=VARCHAR},  <!-- PROCESS_INSTANCE_ID_ -->
		    #{proc_def_id_, jdbcType=VARCHAR},  <!-- PROC_DEF_ID_ -->
		    #{retries_, jdbcType=INTEGER},  <!-- RETRIES_ -->
		    #{exception_stack_id_, jdbcType=VARCHAR},  <!-- EXCEPTION_STACK_ID_ -->
		    #{exception_msg_, jdbcType=VARCHAR},  <!-- EXCEPTION_MSG_ -->
		    #{duedate_, jdbcType=VARCHAR},  <!-- DUEDATE_ -->
		    #{repeat_, jdbcType=VARCHAR},  <!-- REPEAT_ -->
		    #{handler_type_, jdbcType=VARCHAR},  <!-- HANDLER_TYPE_ -->
		    #{handler_cfg_, jdbcType=VARCHAR},  <!-- HANDLER_CFG_ -->
		    #{tenant_id_, jdbcType=VARCHAR}  <!-- TENANT_ID_ -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="Act_ru_jobPO">
		UPDATE act_ru_job
		<set>
			<if test="id_ != null">
		          id_ = #{id_, jdbcType=VARCHAR},  <!-- ID_ -->
			</if>
			<if test="rev_ != null">
		          rev_ = #{rev_, jdbcType=INTEGER},  <!-- REV_ -->
			</if>
			<if test="type_ != null">
		          type_ = #{type_, jdbcType=VARCHAR},  <!-- TYPE_ -->
			</if>
			<if test="lock_exp_time_ != null">
		          lock_exp_time_ = #{lock_exp_time_, jdbcType=VARCHAR},  <!-- LOCK_EXP_TIME_ -->
			</if>
			<if test="lock_owner_ != null">
		          lock_owner_ = #{lock_owner_, jdbcType=VARCHAR},  <!-- LOCK_OWNER_ -->
			</if>
			<if test="exclusive_ != null">
		          exclusive_ = #{exclusive_, jdbcType=VARCHAR},  <!-- EXCLUSIVE_ -->
			</if>
			<if test="execution_id_ != null">
		          execution_id_ = #{execution_id_, jdbcType=VARCHAR},  <!-- EXECUTION_ID_ -->
			</if>
			<if test="process_instance_id_ != null">
		          process_instance_id_ = #{process_instance_id_, jdbcType=VARCHAR},  <!-- PROCESS_INSTANCE_ID_ -->
			</if>
			<if test="proc_def_id_ != null">
		          proc_def_id_ = #{proc_def_id_, jdbcType=VARCHAR},  <!-- PROC_DEF_ID_ -->
			</if>
			<if test="retries_ != null">
		          retries_ = #{retries_, jdbcType=INTEGER},  <!-- RETRIES_ -->
			</if>
			<if test="exception_stack_id_ != null">
		          exception_stack_id_ = #{exception_stack_id_, jdbcType=VARCHAR},  <!-- EXCEPTION_STACK_ID_ -->
			</if>
			<if test="exception_msg_ != null">
		          exception_msg_ = #{exception_msg_, jdbcType=VARCHAR},  <!-- EXCEPTION_MSG_ -->
			</if>
			<if test="duedate_ != null">
		          duedate_ = #{duedate_, jdbcType=VARCHAR},  <!-- DUEDATE_ -->
			</if>
			<if test="repeat_ != null">
		          repeat_ = #{repeat_, jdbcType=VARCHAR},  <!-- REPEAT_ -->
			</if>
			<if test="handler_type_ != null">
		          handler_type_ = #{handler_type_, jdbcType=VARCHAR},  <!-- HANDLER_TYPE_ -->
			</if>
			<if test="handler_cfg_ != null">
		          handler_cfg_ = #{handler_cfg_, jdbcType=VARCHAR},  <!-- HANDLER_CFG_ -->
			</if>
			<if test="tenant_id_ != null">
		          tenant_id_ = #{tenant_id_, jdbcType=VARCHAR},  <!-- TENANT_ID_ -->
			</if>
		</set>
		WHERE  id_ = #{id_}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM act_ru_job WHERE  id_ = #{id_}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="Act_ru_jobPO">
		SELECT
		<include refid="column" />
		FROM act_ru_job WHERE  id_ = #{id_}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="Act_ru_jobPO">
		SELECT
		    <include refid="column" />
		FROM act_ru_job
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="Act_ru_jobPO">
		SELECT
			<include refid="column" />	
		FROM act_ru_job
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="Act_ru_jobPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM act_ru_job
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="Act_ru_jobPO">
		SELECT
			<include refid="column" />	
		FROM act_ru_job
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="Act_ru_jobPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM act_ru_job
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM act_ru_job
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM act_ru_job
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  id_,  <!-- ID_ -->
		  rev_,  <!-- REV_ -->
		  type_,  <!-- TYPE_ -->
		  lock_exp_time_,  <!-- LOCK_EXP_TIME_ -->
		  lock_owner_,  <!-- LOCK_OWNER_ -->
		  exclusive_,  <!-- EXCLUSIVE_ -->
		  execution_id_,  <!-- EXECUTION_ID_ -->
		  process_instance_id_,  <!-- PROCESS_INSTANCE_ID_ -->
		  proc_def_id_,  <!-- PROC_DEF_ID_ -->
		  retries_,  <!-- RETRIES_ -->
		  exception_stack_id_,  <!-- EXCEPTION_STACK_ID_ -->
		  exception_msg_,  <!-- EXCEPTION_MSG_ -->
		  duedate_,  <!-- DUEDATE_ -->
		  repeat_,  <!-- REPEAT_ -->
		  handler_type_,  <!-- HANDLER_TYPE_ -->
		  handler_cfg_,  <!-- HANDLER_CFG_ -->
		  tenant_id_  <!-- TENANT_ID_ -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  act_ru_job.id_,  <!-- ID_ -->
		  act_ru_job.rev_,  <!-- REV_ -->
		  act_ru_job.type_,  <!-- TYPE_ -->
		  act_ru_job.lock_exp_time_,  <!-- LOCK_EXP_TIME_ -->
		  act_ru_job.lock_owner_,  <!-- LOCK_OWNER_ -->
		  act_ru_job.exclusive_,  <!-- EXCLUSIVE_ -->
		  act_ru_job.execution_id_,  <!-- EXECUTION_ID_ -->
		  act_ru_job.process_instance_id_,  <!-- PROCESS_INSTANCE_ID_ -->
		  act_ru_job.proc_def_id_,  <!-- PROC_DEF_ID_ -->
		  act_ru_job.retries_,  <!-- RETRIES_ -->
		  act_ru_job.exception_stack_id_,  <!-- EXCEPTION_STACK_ID_ -->
		  act_ru_job.exception_msg_,  <!-- EXCEPTION_MSG_ -->
		  act_ru_job.duedate_,  <!-- DUEDATE_ -->
		  act_ru_job.repeat_,  <!-- REPEAT_ -->
		  act_ru_job.handler_type_,  <!-- HANDLER_TYPE_ -->
		  act_ru_job.handler_cfg_,  <!-- HANDLER_CFG_ -->
		  act_ru_job.tenant_id_  <!-- TENANT_ID_ -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	    <if test="id_ != null and id_ != ''">
		      AND id_ = #{id_}  <!-- ID_ -->
		</if>
	   <if test="rev_ != null ">
		      AND rev_ = #{rev_}  <!-- REV_ -->
		</if>
	    <if test="type_ != null and type_ != ''">
		      AND type_ = #{type_}  <!-- TYPE_ -->
		</if>
	    <if test="lock_exp_time_ != null and lock_exp_time_ != ''">
		      AND lock_exp_time_ = #{lock_exp_time_}  <!-- LOCK_EXP_TIME_ -->
		</if>
	    <if test="lock_owner_ != null and lock_owner_ != ''">
		      AND lock_owner_ = #{lock_owner_}  <!-- LOCK_OWNER_ -->
		</if>
	    <if test="exclusive_ != null and exclusive_ != ''">
		      AND exclusive_ = #{exclusive_}  <!-- EXCLUSIVE_ -->
		</if>
	    <if test="execution_id_ != null and execution_id_ != ''">
		      AND execution_id_ = #{execution_id_}  <!-- EXECUTION_ID_ -->
		</if>
	    <if test="process_instance_id_ != null and process_instance_id_ != ''">
		      AND process_instance_id_ = #{process_instance_id_}  <!-- PROCESS_INSTANCE_ID_ -->
		</if>
	    <if test="proc_def_id_ != null and proc_def_id_ != ''">
		      AND proc_def_id_ = #{proc_def_id_}  <!-- PROC_DEF_ID_ -->
		</if>
	   <if test="retries_ != null ">
		      AND retries_ = #{retries_}  <!-- RETRIES_ -->
		</if>
	    <if test="exception_stack_id_ != null and exception_stack_id_ != ''">
		      AND exception_stack_id_ = #{exception_stack_id_}  <!-- EXCEPTION_STACK_ID_ -->
		</if>
	    <if test="exception_msg_ != null and exception_msg_ != ''">
		      AND exception_msg_ = #{exception_msg_}  <!-- EXCEPTION_MSG_ -->
		</if>
	    <if test="duedate_ != null and duedate_ != ''">
		      AND duedate_ = #{duedate_}  <!-- DUEDATE_ -->
		</if>
	    <if test="repeat_ != null and repeat_ != ''">
		      AND repeat_ = #{repeat_}  <!-- REPEAT_ -->
		</if>
	    <if test="handler_type_ != null and handler_type_ != ''">
		      AND handler_type_ = #{handler_type_}  <!-- HANDLER_TYPE_ -->
		</if>
	    <if test="handler_cfg_ != null and handler_cfg_ != ''">
		      AND handler_cfg_ = #{handler_cfg_}  <!-- HANDLER_CFG_ -->
		</if>
	    <if test="tenant_id_ != null and tenant_id_ != ''">
		      AND tenant_id_ = #{tenant_id_}  <!-- TENANT_ID_ -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="id_ != null and id_ != ''">
		      AND id_ like '%${id_}%'  <!-- ID_ -->
		</if>
	    <if test="type_ != null and type_ != ''">
		      AND type_ like '%${type_}%'  <!-- TYPE_ -->
		</if>
	    <if test="lock_exp_time_ != null and lock_exp_time_ != ''">
		      AND lock_exp_time_ like '%${lock_exp_time_}%'  <!-- LOCK_EXP_TIME_ -->
		</if>
	    <if test="lock_owner_ != null and lock_owner_ != ''">
		      AND lock_owner_ like '%${lock_owner_}%'  <!-- LOCK_OWNER_ -->
		</if>
	    <if test="exclusive_ != null and exclusive_ != ''">
		      AND exclusive_ like '%${exclusive_}%'  <!-- EXCLUSIVE_ -->
		</if>
	    <if test="execution_id_ != null and execution_id_ != ''">
		      AND execution_id_ like '%${execution_id_}%'  <!-- EXECUTION_ID_ -->
		</if>
	    <if test="process_instance_id_ != null and process_instance_id_ != ''">
		      AND process_instance_id_ like '%${process_instance_id_}%'  <!-- PROCESS_INSTANCE_ID_ -->
		</if>
	    <if test="proc_def_id_ != null and proc_def_id_ != ''">
		      AND proc_def_id_ like '%${proc_def_id_}%'  <!-- PROC_DEF_ID_ -->
		</if>
	    <if test="exception_stack_id_ != null and exception_stack_id_ != ''">
		      AND exception_stack_id_ like '%${exception_stack_id_}%'  <!-- EXCEPTION_STACK_ID_ -->
		</if>
	    <if test="exception_msg_ != null and exception_msg_ != ''">
		      AND exception_msg_ like '%${exception_msg_}%'  <!-- EXCEPTION_MSG_ -->
		</if>
	    <if test="duedate_ != null and duedate_ != ''">
		      AND duedate_ like '%${duedate_}%'  <!-- DUEDATE_ -->
		</if>
	    <if test="repeat_ != null and repeat_ != ''">
		      AND repeat_ like '%${repeat_}%'  <!-- REPEAT_ -->
		</if>
	    <if test="handler_type_ != null and handler_type_ != ''">
		      AND handler_type_ like '%${handler_type_}%'  <!-- HANDLER_TYPE_ -->
		</if>
	    <if test="handler_cfg_ != null and handler_cfg_ != ''">
		      AND handler_cfg_ like '%${handler_cfg_}%'  <!-- HANDLER_CFG_ -->
		</if>
	    <if test="tenant_id_ != null and tenant_id_ != ''">
		      AND tenant_id_ like '%${tenant_id_}%'  <!-- TENANT_ID_ -->
		</if>
	</sql>
	
</mapper>