<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ACT_HI_DETAIL[act_hi_detail]SQLMapper自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2018-12-18 15:50:46 -->
<mapper namespace="cn.osworks.aos.system.dao.mapper.Act_hi_detailMapper">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert"  parameterType="Act_hi_detailPO">
		INSERT INTO act_hi_detail (
		<if test="type_ != null and type_ != ''">
	         type_, <!-- TYPE_ -->
		</if>
		<if test="proc_inst_id_ != null and proc_inst_id_ != ''">
	         proc_inst_id_, <!-- PROC_INST_ID_ -->
		</if>
		<if test="execution_id_ != null and execution_id_ != ''">
	         execution_id_, <!-- EXECUTION_ID_ -->
		</if>
		<if test="task_id_ != null and task_id_ != ''">
	         task_id_, <!-- TASK_ID_ -->
		</if>
		<if test="act_inst_id_ != null and act_inst_id_ != ''">
	         act_inst_id_, <!-- ACT_INST_ID_ -->
		</if>
		<if test="name_ != null and name_ != ''">
	         name_, <!-- NAME_ -->
		</if>
		<if test="var_type_ != null and var_type_ != ''">
	         var_type_, <!-- VAR_TYPE_ -->
		</if>
		<if test="rev_ != null">
	         rev_, <!-- REV_ -->
		</if>
		<if test="time_ != null and time_ != ''">
	         time_, <!-- TIME_ -->
		</if>
		<if test="bytearray_id_ != null and bytearray_id_ != ''">
	         bytearray_id_, <!-- BYTEARRAY_ID_ -->
		</if>
		<if test="double_ != null and double_ != ''">
	         double_, <!-- DOUBLE_ -->
		</if>
		<if test="long_ != null">
	         long_, <!-- LONG_ -->
		</if>
		<if test="text_ != null and text_ != ''">
	         text_, <!-- TEXT_ -->
		</if>
		<if test="text2_ != null and text2_ != ''">
	         text2_, <!-- TEXT2_ -->
		</if>
		<if test="id_ != null and id_ != ''">
	          id_  <!-- ID_ -->
	   </if>
		)VALUES(
		<if test="type_ != null and type_ != ''">
	          #{type_, jdbcType=VARCHAR}, <!-- TYPE_ -->
	    </if>
		<if test="proc_inst_id_ != null and proc_inst_id_ != ''">
	          #{proc_inst_id_, jdbcType=VARCHAR}, <!-- PROC_INST_ID_ -->
	    </if>
		<if test="execution_id_ != null and execution_id_ != ''">
	          #{execution_id_, jdbcType=VARCHAR}, <!-- EXECUTION_ID_ -->
	    </if>
		<if test="task_id_ != null and task_id_ != ''">
	          #{task_id_, jdbcType=VARCHAR}, <!-- TASK_ID_ -->
	    </if>
		<if test="act_inst_id_ != null and act_inst_id_ != ''">
	          #{act_inst_id_, jdbcType=VARCHAR}, <!-- ACT_INST_ID_ -->
	    </if>
		<if test="name_ != null and name_ != ''">
	          #{name_, jdbcType=VARCHAR}, <!-- NAME_ -->
	    </if>
		<if test="var_type_ != null and var_type_ != ''">
	          #{var_type_, jdbcType=VARCHAR}, <!-- VAR_TYPE_ -->
	    </if>
		<if test="rev_ != null">
	          #{rev_, jdbcType=INTEGER}, <!-- REV_ -->
	    </if>
		<if test="time_ != null and time_ != ''">
	          #{time_, jdbcType=VARCHAR}, <!-- TIME_ -->
	    </if>
		<if test="bytearray_id_ != null and bytearray_id_ != ''">
	          #{bytearray_id_, jdbcType=VARCHAR}, <!-- BYTEARRAY_ID_ -->
	    </if>
		<if test="double_ != null and double_ != ''">
	          #{double_, jdbcType=VARCHAR}, <!-- DOUBLE_ -->
	    </if>
		<if test="long_ != null">
	          #{long_, jdbcType=NUMERIC}, <!-- LONG_ -->
	    </if>
		<if test="text_ != null and text_ != ''">
	          #{text_, jdbcType=VARCHAR}, <!-- TEXT_ -->
	    </if>
		<if test="text2_ != null and text2_ != ''">
	          #{text2_, jdbcType=VARCHAR}, <!-- TEXT2_ -->
	    </if>
		<if test="id_ != null and id_ != ''">
		     #{id_, jdbcType=VARCHAR}  <!-- ID_ -->
	    </if>
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll"  parameterType="Act_hi_detailPO">
		INSERT INTO act_hi_detail (
		    <include refid="column" />
		)
		VALUES (
		    #{id_, jdbcType=VARCHAR},  <!-- ID_ -->
		    #{type_, jdbcType=VARCHAR},  <!-- TYPE_ -->
		    #{proc_inst_id_, jdbcType=VARCHAR},  <!-- PROC_INST_ID_ -->
		    #{execution_id_, jdbcType=VARCHAR},  <!-- EXECUTION_ID_ -->
		    #{task_id_, jdbcType=VARCHAR},  <!-- TASK_ID_ -->
		    #{act_inst_id_, jdbcType=VARCHAR},  <!-- ACT_INST_ID_ -->
		    #{name_, jdbcType=VARCHAR},  <!-- NAME_ -->
		    #{var_type_, jdbcType=VARCHAR},  <!-- VAR_TYPE_ -->
		    #{rev_, jdbcType=INTEGER},  <!-- REV_ -->
		    #{time_, jdbcType=VARCHAR},  <!-- TIME_ -->
		    #{bytearray_id_, jdbcType=VARCHAR},  <!-- BYTEARRAY_ID_ -->
		    #{double_, jdbcType=VARCHAR},  <!-- DOUBLE_ -->
		    #{long_, jdbcType=NUMERIC},  <!-- LONG_ -->
		    #{text_, jdbcType=VARCHAR},  <!-- TEXT_ -->
		    #{text2_, jdbcType=VARCHAR}  <!-- TEXT2_ -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="Act_hi_detailPO">
		UPDATE act_hi_detail
		<set>
			<if test="id_ != null">
		          id_ = #{id_, jdbcType=VARCHAR},  <!-- ID_ -->
			</if>
			<if test="type_ != null">
		          type_ = #{type_, jdbcType=VARCHAR},  <!-- TYPE_ -->
			</if>
			<if test="proc_inst_id_ != null">
		          proc_inst_id_ = #{proc_inst_id_, jdbcType=VARCHAR},  <!-- PROC_INST_ID_ -->
			</if>
			<if test="execution_id_ != null">
		          execution_id_ = #{execution_id_, jdbcType=VARCHAR},  <!-- EXECUTION_ID_ -->
			</if>
			<if test="task_id_ != null">
		          task_id_ = #{task_id_, jdbcType=VARCHAR},  <!-- TASK_ID_ -->
			</if>
			<if test="act_inst_id_ != null">
		          act_inst_id_ = #{act_inst_id_, jdbcType=VARCHAR},  <!-- ACT_INST_ID_ -->
			</if>
			<if test="name_ != null">
		          name_ = #{name_, jdbcType=VARCHAR},  <!-- NAME_ -->
			</if>
			<if test="var_type_ != null">
		          var_type_ = #{var_type_, jdbcType=VARCHAR},  <!-- VAR_TYPE_ -->
			</if>
			<if test="rev_ != null">
		          rev_ = #{rev_, jdbcType=INTEGER},  <!-- REV_ -->
			</if>
			<if test="time_ != null">
		          time_ = #{time_, jdbcType=VARCHAR},  <!-- TIME_ -->
			</if>
			<if test="bytearray_id_ != null">
		          bytearray_id_ = #{bytearray_id_, jdbcType=VARCHAR},  <!-- BYTEARRAY_ID_ -->
			</if>
			<if test="double_ != null">
		          double_ = #{double_, jdbcType=VARCHAR},  <!-- DOUBLE_ -->
			</if>
			<if test="long_ != null">
		          long_ = #{long_, jdbcType=NUMERIC},  <!-- LONG_ -->
			</if>
			<if test="text_ != null">
		          text_ = #{text_, jdbcType=VARCHAR},  <!-- TEXT_ -->
			</if>
			<if test="text2_ != null">
		          text2_ = #{text2_, jdbcType=VARCHAR},  <!-- TEXT2_ -->
			</if>
		</set>
		WHERE  id_ = #{id_}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM act_hi_detail WHERE  id_ = #{id_}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="Act_hi_detailPO">
		SELECT
		<include refid="column" />
		FROM act_hi_detail WHERE  id_ = #{id_}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="Act_hi_detailPO">
		SELECT
		    <include refid="column" />
		FROM act_hi_detail
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="Act_hi_detailPO">
		SELECT
			<include refid="column" />	
		FROM act_hi_detail
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="Act_hi_detailPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM act_hi_detail
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="Act_hi_detailPO">
		SELECT
			<include refid="column" />	
		FROM act_hi_detail
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="Act_hi_detailPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM act_hi_detail
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM act_hi_detail
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM act_hi_detail
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  id_,  <!-- ID_ -->
		  type_,  <!-- TYPE_ -->
		  proc_inst_id_,  <!-- PROC_INST_ID_ -->
		  execution_id_,  <!-- EXECUTION_ID_ -->
		  task_id_,  <!-- TASK_ID_ -->
		  act_inst_id_,  <!-- ACT_INST_ID_ -->
		  name_,  <!-- NAME_ -->
		  var_type_,  <!-- VAR_TYPE_ -->
		  rev_,  <!-- REV_ -->
		  time_,  <!-- TIME_ -->
		  bytearray_id_,  <!-- BYTEARRAY_ID_ -->
		  double_,  <!-- DOUBLE_ -->
		  long_,  <!-- LONG_ -->
		  text_,  <!-- TEXT_ -->
		  text2_  <!-- TEXT2_ -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  act_hi_detail.id_,  <!-- ID_ -->
		  act_hi_detail.type_,  <!-- TYPE_ -->
		  act_hi_detail.proc_inst_id_,  <!-- PROC_INST_ID_ -->
		  act_hi_detail.execution_id_,  <!-- EXECUTION_ID_ -->
		  act_hi_detail.task_id_,  <!-- TASK_ID_ -->
		  act_hi_detail.act_inst_id_,  <!-- ACT_INST_ID_ -->
		  act_hi_detail.name_,  <!-- NAME_ -->
		  act_hi_detail.var_type_,  <!-- VAR_TYPE_ -->
		  act_hi_detail.rev_,  <!-- REV_ -->
		  act_hi_detail.time_,  <!-- TIME_ -->
		  act_hi_detail.bytearray_id_,  <!-- BYTEARRAY_ID_ -->
		  act_hi_detail.double_,  <!-- DOUBLE_ -->
		  act_hi_detail.long_,  <!-- LONG_ -->
		  act_hi_detail.text_,  <!-- TEXT_ -->
		  act_hi_detail.text2_  <!-- TEXT2_ -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	    <if test="id_ != null and id_ != ''">
		      AND id_ = #{id_}  <!-- ID_ -->
		</if>
	    <if test="type_ != null and type_ != ''">
		      AND type_ = #{type_}  <!-- TYPE_ -->
		</if>
	    <if test="proc_inst_id_ != null and proc_inst_id_ != ''">
		      AND proc_inst_id_ = #{proc_inst_id_}  <!-- PROC_INST_ID_ -->
		</if>
	    <if test="execution_id_ != null and execution_id_ != ''">
		      AND execution_id_ = #{execution_id_}  <!-- EXECUTION_ID_ -->
		</if>
	    <if test="task_id_ != null and task_id_ != ''">
		      AND task_id_ = #{task_id_}  <!-- TASK_ID_ -->
		</if>
	    <if test="act_inst_id_ != null and act_inst_id_ != ''">
		      AND act_inst_id_ = #{act_inst_id_}  <!-- ACT_INST_ID_ -->
		</if>
	    <if test="name_ != null and name_ != ''">
		      AND name_ = #{name_}  <!-- NAME_ -->
		</if>
	    <if test="var_type_ != null and var_type_ != ''">
		      AND var_type_ = #{var_type_}  <!-- VAR_TYPE_ -->
		</if>
	   <if test="rev_ != null ">
		      AND rev_ = #{rev_}  <!-- REV_ -->
		</if>
	    <if test="time_ != null and time_ != ''">
		      AND time_ = #{time_}  <!-- TIME_ -->
		</if>
	    <if test="bytearray_id_ != null and bytearray_id_ != ''">
		      AND bytearray_id_ = #{bytearray_id_}  <!-- BYTEARRAY_ID_ -->
		</if>
	    <if test="double_ != null and double_ != ''">
		      AND double_ = #{double_}  <!-- DOUBLE_ -->
		</if>
	   <if test="long_ != null ">
		      AND long_ = #{long_}  <!-- LONG_ -->
		</if>
	    <if test="text_ != null and text_ != ''">
		      AND text_ = #{text_}  <!-- TEXT_ -->
		</if>
	    <if test="text2_ != null and text2_ != ''">
		      AND text2_ = #{text2_}  <!-- TEXT2_ -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="id_ != null and id_ != ''">
		      AND id_ like '%${id_}%'  <!-- ID_ -->
		</if>
	    <if test="type_ != null and type_ != ''">
		      AND type_ like '%${type_}%'  <!-- TYPE_ -->
		</if>
	    <if test="proc_inst_id_ != null and proc_inst_id_ != ''">
		      AND proc_inst_id_ like '%${proc_inst_id_}%'  <!-- PROC_INST_ID_ -->
		</if>
	    <if test="execution_id_ != null and execution_id_ != ''">
		      AND execution_id_ like '%${execution_id_}%'  <!-- EXECUTION_ID_ -->
		</if>
	    <if test="task_id_ != null and task_id_ != ''">
		      AND task_id_ like '%${task_id_}%'  <!-- TASK_ID_ -->
		</if>
	    <if test="act_inst_id_ != null and act_inst_id_ != ''">
		      AND act_inst_id_ like '%${act_inst_id_}%'  <!-- ACT_INST_ID_ -->
		</if>
	    <if test="name_ != null and name_ != ''">
		      AND name_ like '%${name_}%'  <!-- NAME_ -->
		</if>
	    <if test="var_type_ != null and var_type_ != ''">
		      AND var_type_ like '%${var_type_}%'  <!-- VAR_TYPE_ -->
		</if>
	    <if test="time_ != null and time_ != ''">
		      AND time_ like '%${time_}%'  <!-- TIME_ -->
		</if>
	    <if test="bytearray_id_ != null and bytearray_id_ != ''">
		      AND bytearray_id_ like '%${bytearray_id_}%'  <!-- BYTEARRAY_ID_ -->
		</if>
	    <if test="double_ != null and double_ != ''">
		      AND double_ like '%${double_}%'  <!-- DOUBLE_ -->
		</if>
	    <if test="text_ != null and text_ != ''">
		      AND text_ like '%${text_}%'  <!-- TEXT_ -->
		</if>
	    <if test="text2_ != null and text2_ != ''">
		      AND text2_ like '%${text2_}%'  <!-- TEXT2_ -->
		</if>
	</sql>
	
</mapper>